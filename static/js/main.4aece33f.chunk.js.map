{"version":3,"sources":["game/dice.ts","game/index.ts","store/gameStore.ts","utils/api.ts","store/index.ts","store/tezosStore.ts","utils/types.ts","ui/pages/main/styled.ts","ui/pages/main/index.tsx","ui/components/buttons.ts","ui/components/auth/index.tsx","ui/components/game/styled.ts","ui/components/game/index.tsx","ui/pages/game/styled.ts","ui/pages/game/index.tsx","ui/pages/landing/styled.ts","ui/pages/landing/index.tsx","ui/routes/index.ts","ui/index.tsx","reportWebVitals.ts","index.tsx"],"names":["random","Phaser","Math","RandomDataGenerator","Dice","scene","x","y","sprite","this","physics","add","setInteractive","Geom","Rectangle","Contains","on","alpha","n","randomArr","shuffle","push","anims","remove","create","key","frames","generateFrameNumbers","start","end","frameRate","play","FarkleGame","dices","gameWindowId","that","Promise","resolve","Game","type","AUTO","parent","width","height","default","arcade","gravity","preload","load","spritesheet","frameWidth","frameHeight","sys","canvas","onSceneCreate","forEach","dice","i","Display","Align","In","RightCenter","values","throwDice","length","setFrame","GameStore","getApi","game","allGames","currentGame","makeAutoObservable","autoBind","a","setDiceValues","currentPlayerDices","map","d","toNumber","gameAddress","throwDices","gameState","runInAction","endMove","loadAllGames","games","startNewGame","createNewGame","factoryContractAddress","GameApi","tezosToolkit","wallet","at","contract","methods","send","operation","confirmation","storage","activeGames","all","address","farkleGameState","gamesWithDetails","startGame","leaveDiceIndexes","tezosStore","balance","connected","api","TempleWallet","isAvailable","alert","connect","toTezos","pkh","tz","getBalance","toString","gameStore","RootStore","RootStoreContext","createContext","useAppStores","useContext","GameState","0","1","2","3","PageContainer","styled","div","InfoLine","HeaderContainer","ContentContainer","AllGamesTable","table","observer","navigate","useNavigate","useEffect","loadGames","joinGameHandler","useCallback","joinGame","state","createNewGameHandler","onClick","creator","BaseButton","AuthProtector","children","location","useLocation","to","from","GameContainer","GameScene","onStart","id","GameFrame","ThrowsContainer","Player1ThrowsContainer","Player2ThrowsContainer","InfoLineHeader","ResultLine","span","ControlsContainer","ControlButton","numberToImageMap","4","5","6","gamersInfos","useMemo","myAddress","player1","me","points","player1Points","other","player2Points","replace","bind","movePoints","currentPlayerLeavedDices","className","connectHandler","pathname","AppRoutes","path","element","React","createElement","LandingPage","GamePage","MainPage","GlobalStyle","createGlobalStyle","rootStore","Provider","value","routeProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aece33f.chunk.js","sourcesContent":["import Phaser from \"phaser\";\n\nconst random = new Phaser.Math.RandomDataGenerator();\n\nexport class Dice {\n  sprite: Phaser.Physics.Arcade.Sprite;\n\n  constructor(scene: Phaser.Scene, x: number, y: number) {\n    this.sprite = scene.physics.add.sprite(x, y, \"dice\");\n    this.sprite.setInteractive(\n      new Phaser.Geom.Rectangle(0, 0, 100, 100),\n      Phaser.Geom.Rectangle.Contains\n    );\n\n    this.sprite.on(\"pointerover\", () => {\n      this.sprite.alpha = 0.5;\n    });\n\n    this.sprite.on(\"pointerout\", () => {\n      this.sprite.alpha = 1;\n    });\n  }\n\n  throwDice(n: number) {\n    const randomArr = random.shuffle([\n      0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4,\n    ]);\n    randomArr.push(n - 1);\n\n    this.sprite.anims.remove(\"roll\");\n    this.sprite.anims.create({\n      key: \"roll\",\n      frames: this.sprite.anims.generateFrameNumbers(\"dice\", {\n        start: 0,\n        end: 5,\n        frames: randomArr,\n      }),\n      frameRate: 15,\n    });\n\n    this.sprite.play(\"roll\");\n  }\n\n  getSprite() {\n    return this.sprite;\n  }\n}\n","import Phaser from \"phaser\";\nimport { Dice } from \"./dice\";\n\nconst onScenePreload = (scene: Phaser.Scene) => {\n  scene.load.spritesheet(\"dice\", \"./images/dice.png\", {\n    frameWidth: 100,\n    frameHeight: 100,\n  });\n};\n\nconst onSceneCreate = (scene: Phaser.Scene) => {\n  const { width, height } = scene.sys.canvas;\n  return [\n    new Dice(scene, width / 2 - 250, height / 2),\n    new Dice(scene, 0, 0),\n    new Dice(scene, 0, 0),\n    new Dice(scene, 0, 0),\n    new Dice(scene, 0, 0),\n    new Dice(scene, 0, 0),\n  ];\n};\n\nexport class FarkleGame {\n  dices: Dice[] = [];\n\n  start(gameWindowId: string) {\n    const that = this;\n\n    return new Promise<void>(\n      (resolve) =>\n        new Phaser.Game({\n          type: Phaser.AUTO,\n          parent: gameWindowId,\n          width: \"100\",\n          height: \"100\",\n          physics: {\n            default: \"arcade\",\n            arcade: {\n              gravity: { y: 0 },\n            },\n          },\n          scene: {\n            preload: function () {\n              onScenePreload(this);\n            },\n            create: function () {\n              const dices = onSceneCreate(this);\n              dices.forEach((dice, i) => {\n                that.dices.push(dice);\n                if (i !== 0) {\n                  Phaser.Display.Align.In.RightCenter(\n                    dice.sprite,\n                    dices[i - 1].sprite,\n                    100\n                  );\n                }\n              });\n              resolve();\n            },\n          },\n        })\n    );\n  }\n\n  throwDices(values: number[]) {\n    this.dices.forEach((dice, i) => dice.throwDice(values[i]));\n  }\n\n  setDiceValues(values: number[]) {\n    for (let i = 0; i < values.length; i++) {\n      this.dices[i]?.sprite.setFrame(values[i] === 0 ? 0 : values[i] - 1);\n    }\n  }\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\n\nimport { FarkleGame } from \"game\";\nimport { GameApi } from \"utils/api\";\nimport { FarkleGameState } from \"utils/types\";\n\ntype GetApiFn = () => GameApi;\nexport class GameStore {\n  game: FarkleGame = new FarkleGame();\n  allGames: FarkleGameState[] = [];\n  currentGame: FarkleGameState | null = null;\n\n  constructor(private getApi: GetApiFn) {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  async startGame(gameWindowId: string) {\n    await this.game.start(gameWindowId);\n    if (this.currentGame != null) {\n      this.game.setDiceValues(\n        this.currentGame.currentPlayerDices.map((d) => d.toNumber())\n      );\n    }\n  }\n\n  async throwDices(gameAddress: string) {\n    const gameState = await this.getApi()?.throwDices(gameAddress);\n    runInAction(() => {\n      this.game.throwDices(\n        gameState.currentPlayerDices.map((d) => d.toNumber())\n      );\n      this.currentGame = gameState;\n    });\n  }\n\n  async endMove(gameAddress: string) {\n    const gameState = await this.getApi()?.endMove(gameAddress);\n    runInAction(() => {\n      this.currentGame = gameState;\n    });\n  }\n\n  async loadGames() {\n    const games = await this.getApi()?.loadAllGames();\n    runInAction(() => {\n      if (games != null) {\n        this.allGames = games;\n      }\n    });\n  }\n\n  async joinGame(gameAddress: string) {\n    const gameState = await this.getApi()?.startNewGame(gameAddress);\n    runInAction(() => {\n      this.currentGame = gameState;\n    });\n  }\n\n  async createNewGame() {\n    await this.getApi()?.createNewGame();\n  }\n}\n","import { TezosToolkit } from \"@taquito/taquito\";\n\nimport { FarkleGameFactoryState, FarkleGameState } from \"./types\";\n\nconst test: string | undefined = \"KT19ARHPtcBsgBs55obUSE2FzMXZ7QcQNoBz\";\nconst factoryContractAddress =\n  test || process.env.REACT_APP_FACTORY_CONTRACT_ADDRESS;\n\nexport class GameApi {\n  constructor(private tezosToolkit: TezosToolkit) {}\n\n  async createNewGame() {\n    if (factoryContractAddress != null && factoryContractAddress !== \"\") {\n      const contract = await this.tezosToolkit.wallet.at(\n        factoryContractAddress\n      );\n      const operation = await contract.methods.createNewGame().send();\n      await operation.confirmation();\n      const storage: FarkleGameFactoryState = await contract.storage();\n      return storage.activeGames;\n    }\n  }\n\n  async loadAllGames() {\n    if (factoryContractAddress != null && factoryContractAddress !== \"\") {\n      const contract = await this.tezosToolkit.wallet.at(\n        factoryContractAddress\n      );\n      const storage: FarkleGameFactoryState = await contract.storage();\n      const gamesWithDetails = await Promise.all(\n        (storage.activeGames as string[]).map(async (address) => {\n          const contract = await this.tezosToolkit.wallet.at(address);\n          const farkleGameState: FarkleGameState = await contract.storage();\n          return {\n            ...farkleGameState,\n            address: address,\n          };\n        })\n      );\n      return gamesWithDetails;\n    }\n  }\n\n  async startNewGame(gameAddress: string) {\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    const operation = await contract.methods.startGame().send();\n    await operation.confirmation();\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n\n  async throwDices(gameAddress: string, leaveDiceIndexes: number[] = []) {\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    const operation = await contract.methods\n      .throwDices(leaveDiceIndexes)\n      .send();\n    await operation.confirmation();\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n\n  async endMove(gameAddress: string) {\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    const operation = await contract.methods.endMove().send();\n    await operation.confirmation();\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n}\n","import { useContext, createContext } from \"react\";\n\nimport { GameStore } from \"./gameStore\";\nimport { TezosStore } from \"./tezosStore\";\n\nconst tezosStore: TezosStore = new TezosStore();\nconst gameStore: GameStore = new GameStore(tezosStore.getApi);\n\nclass RootStore {\n  tezosStore = tezosStore;\n  gameStore = gameStore;\n}\n\nexport const RootStoreContext = createContext<RootStore>(new RootStore());\nexport const useAppStores = () => useContext(RootStoreContext);\nexport default RootStore;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { TempleWallet } from \"@temple-wallet/dapp\";\nimport { GameApi } from \"utils/api\";\n\nconst tezosRpcUrl = process.env.REACT_APP_TEZOS_RPC_URL;\n\nexport class TezosStore {\n  address = \"\";\n  balance = \"\";\n  connected = false;\n  api!: GameApi;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  async connect() {\n    if (this.connected) {\n      return;\n    }\n    const available = await TempleWallet.isAvailable();\n    if (!available) {\n      alert(\"Temple Wallet not installed\");\n    }\n    const wallet = new TempleWallet(\"Farkle\");\n    if (tezosRpcUrl != null && tezosRpcUrl !== \"\") {\n      await wallet.connect({\n        name: \"Local\",\n        rpc: tezosRpcUrl,\n      });\n    } else {\n      await wallet.connect(\"granadanet\");\n    }\n\n    const tezosToolkit = wallet.toTezos();\n    const address = await tezosToolkit.wallet.pkh();\n    const balance = await tezosToolkit.tz.getBalance(address);\n\n    runInAction(() => {\n      this.address = address;\n      this.balance = balance.toString();\n      this.connected = wallet.connected;\n      this.api = new GameApi(tezosToolkit);\n    });\n  }\n\n  getApi = () => this.api;\n}\n","import { BigNumber } from \"bignumber.js\";\n\nexport interface FarkleGameState {\n  address: string;\n  creator: string;\n  state: BigNumber;\n  seed: BigNumber;\n  player1: string;\n  player2: string;\n  player1Points: BigNumber;\n  player2Points: BigNumber;\n  currentPlayer: BigNumber;\n  moveStage: BigNumber;\n  movePoints: BigNumber;\n  winner: string;\n  currentPlayerDices: BigNumber[];\n  currentPlayerLeavedDices: BigNumber[];\n}\n\nexport interface FarkleGameFactoryState {\n  activeGames: string[];\n  inactiveGames: string[];\n}\n\nexport const GameState: { [key: number]: string } = {\n  0: \"Created\",\n  1: \"PlayerJoined\",\n  2: \"Started\",\n  3: \"Finished\",\n};\n","import styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport const InfoLine = styled.div`\n  cursor: pointer;\n  font-size: 14px;\n  margin-right: 10px;\n\n  :hover {\n    color: red;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100vw;\n  height: 12vh;\n  background-color: red;\n  padding-left: 50px;\n  padding-right: 50px;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 88vh;\n  background-color: blue;\n`;\n\nexport const AllGamesTable = styled.table`\n  border-collapse: collapse;\n\n  th {\n    border: 1px solid #dddddd;\n    text-align: left;\n    padding: 8px;\n  }\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useAppStores } from \"store\";\nimport { GameState } from \"utils/types\";\n\nimport {\n  PageContainer,\n  InfoLine,\n  HeaderContainer,\n  ContentContainer,\n  AllGamesTable,\n} from \"./styled\";\n\nexport default observer(() => {\n  const { tezosStore, gameStore } = useAppStores();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    gameStore.loadGames();\n  }, [gameStore]);\n\n  const joinGameHandler = useCallback(\n    async (gameAddress: string) => {\n      await gameStore.joinGame(gameAddress);\n      navigate(\"/game\", {\n        state: {\n          gameAddress: gameAddress,\n        },\n      });\n    },\n    [gameStore, navigate]\n  );\n\n  const createNewGameHandler = useCallback(async () => {\n    await gameStore.createNewGame();\n    await gameStore.loadGames();\n  }, [gameStore]);\n\n  return (\n    <PageContainer>\n      <HeaderContainer>\n        <InfoLine>Address: {tezosStore.address}</InfoLine>\n        <InfoLine>Balance: {tezosStore.balance}</InfoLine>\n      </HeaderContainer>\n      <ContentContainer>\n        <AllGamesTable>\n          <thead>\n            <tr>\n              <th>Contract address</th>\n              <th>Creator address</th>\n              <th>Status</th>\n              <th>\n                <button onClick={createNewGameHandler}>Create new</button>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {gameStore.allGames.map((game, i) => (\n              <tr key={i}>\n                <td>{game.address}</td>\n                <td>{game.creator}</td>\n                <td>{GameState[game.state.toNumber()]}</td>\n                <td>\n                  <button onClick={() => joinGameHandler(game.address)}>\n                    Join game\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </AllGamesTable>\n      </ContentContainer>\n    </PageContainer>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const BaseButton = styled.div`\n  line-height: 50px;\n  padding: 0 15px 0 15px;\n  color: black;\n  border-radius: 5px;\n  border: 1px solid black;\n  width: auto;\n  background-color: red;\n  text-align: center;\n  cursor: pointer;\n\n  :hover {\n    color: white;\n  }\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nimport { useAppStores } from \"store\";\n\nexport const AuthProtector: React.FC<{\n  children: JSX.Element;\n}> = observer(({ children }) => {\n  const { tezosStore } = useAppStores();\n  const location = useLocation();\n\n  if (!tezosStore.connected) {\n    return <Navigate to=\"/\" state={{ from: location }} />;\n  }\n\n  return children;\n});\n","import styled from \"styled-components\";\n\nexport const GameContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n","import React, { useEffect } from \"react\";\nimport { GameContainer } from \"./styled\";\n\nconst gameWindowId = \"gameWindow\";\n\nexport const GameScene: React.FC<{\n  onStart(gameWindowId: string): void;\n}> = ({ onStart }) => {\n  useEffect(() => {\n    onStart(gameWindowId);\n  }, [onStart]);\n  return <GameContainer id={gameWindowId} />;\n};\n","import styled from \"styled-components\";\n\nimport { BaseButton } from \"ui/components\";\n\nexport const PageContainer = styled.div`\n  position: relative;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: #cdcdcd;\n`;\n\nexport const GameFrame = styled.div`\n  position: relative;\n  width: calc(80vw - 250px);\n  height: 76vh;\n  border: 5px solid #cdcdcd;\n  background-color: grey;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ThrowsContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: black;\n  border: 5px solid #cdcdcd;\n  width: 250px;\n  height: 400px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Player1ThrowsContainer = styled(ThrowsContainer)`\n  left: 10px;\n`;\n\nexport const Player2ThrowsContainer = styled(ThrowsContainer)`\n  right: 10px;\n`;\n\nexport const InfoLineHeader = styled.div`\n  font-family: monospace;\n  font-size: 25px;\n  background-color: rgba($color: #fff, $alpha: 0.2);\n  padding-left: 10px;\n  padding-right: 10px;\n  color: #cdcdcd;\n  box-sizing: border-box;\n  width: 100%;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const InfoLine = styled.div`\n  font-family: monospace;\n  font-size: 20px;\n  background-color: rgba($color: #fff, $alpha: 0.2);\n  padding-left: 10px;\n  padding-right: 10px;\n  color: #cdcdcd;\n  box-sizing: border-box;\n  width: 100%;\n`;\n\nexport const ResultLine = styled.span`\n  color: #cdcdcd;\n  font-size: 40px;\n  font-family: monospace;\n  margin-top: 5px;\n`;\n\nexport const ControlsContainer = styled.div`\n  position: absolute;\n  bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ControlButton = styled(BaseButton)`\n  margin-left: 10px;\n  margin-right: 10px;\n  text-transform: uppercase;\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { useMemo } from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nimport { useAppStores } from \"store\";\nimport { GameScene } from \"ui/components\";\nimport { FarkleGameState } from \"utils/types\";\n\nimport {\n  PageContainer,\n  GameFrame,\n  Player1ThrowsContainer,\n  Player2ThrowsContainer,\n  InfoLine,\n  ResultLine,\n  InfoLineHeader,\n  ControlsContainer,\n  ControlButton,\n} from \"./styled\";\n\nconst numberToImageMap: { [key: number]: string } = {\n  1: \"la-dice-one\",\n  2: \"la-dice-two\",\n  3: \"la-dice-three\",\n  4: \"la-dice-four\",\n  5: \"la-dice-five\",\n  6: \"la-dice-six\",\n};\n\nconst sortGamersInfo = (\n  myAddress: string,\n  gameState: FarkleGameState | null\n) => {\n  if (gameState == null) {\n    return null;\n  }\n  if (myAddress === gameState.player1) {\n    return {\n      me: {\n        points: gameState.player1Points,\n      },\n      other: {\n        points: gameState.player2Points,\n      },\n    };\n  }\n  return {\n    me: {\n      points: gameState.player2Points,\n    },\n    other: {\n      points: gameState.player1Points,\n    },\n  };\n};\n\nexport default observer(() => {\n  const { gameStore, tezosStore } = useAppStores();\n  const location = useLocation();\n  const { gameAddress } = location.state || {};\n  const gamersInfos = useMemo(\n    () => sortGamersInfo(tezosStore.address, gameStore.currentGame),\n    [tezosStore, gameStore]\n  );\n\n  if (gameAddress == null) {\n    return <Navigate to={\"/main\"} replace={true} />;\n  }\n\n  return (\n    <PageContainer>\n      <GameFrame>\n        <GameScene onStart={gameStore.startGame.bind(gameStore)} />\n      </GameFrame>\n      <Player1ThrowsContainer>\n        <InfoLineHeader>You</InfoLineHeader>\n        <InfoLine>Total: {gamersInfos?.me.points.toNumber()} points</InfoLine>\n        <InfoLine>\n          Current: {gameStore.currentGame?.movePoints.toNumber()} points\n        </InfoLine>\n        <ResultLine>\n          {gameStore.currentGame?.currentPlayerLeavedDices.map((dice, i) => (\n            <i\n              key={i}\n              className={\"las \" + numberToImageMap[dice.toNumber()]}\n            ></i>\n          ))}\n        </ResultLine>\n      </Player1ThrowsContainer>\n      <Player2ThrowsContainer>\n        <InfoLineHeader>Guest</InfoLineHeader>\n        <InfoLine>\n          Total: {gamersInfos?.other.points.toNumber()} points\n        </InfoLine>\n        <InfoLine>\n          Current: {gameStore.currentGame?.movePoints.toNumber()} points\n        </InfoLine>\n        <ResultLine>\n          {gameStore.currentGame?.currentPlayerLeavedDices.map((dice, i) => (\n            <i\n              key={i}\n              className={\"las \" + numberToImageMap[dice.toNumber()]}\n            ></i>\n          ))}\n        </ResultLine>\n      </Player2ThrowsContainer>\n      <ControlsContainer>\n        <ControlButton onClick={() => gameStore.throwDices(gameAddress)}>\n          Roll dices\n        </ControlButton>\n        <ControlButton onClick={() => gameStore.endMove(gameAddress)}>\n          End move\n        </ControlButton>\n      </ControlsContainer>\n    </PageContainer>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  position: relative;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useCallback } from \"react\";\n\nimport { BaseButton } from \"ui/components\";\nimport { useAppStores } from \"store\";\n\nimport { PageContainer } from \"./styled\";\n\nexport default observer(() => {\n  const { tezosStore } = useAppStores();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const connectHandler = useCallback(async () => {\n    await tezosStore.connect();\n    const from = location.state?.from?.pathname || \"/main\";\n    navigate(from, { replace: true });\n  }, [tezosStore, location, navigate]);\n\n  return (\n    <PageContainer>\n      <BaseButton onClick={connectHandler}>Connect</BaseButton>\n    </PageContainer>\n  );\n});\n","import React from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nimport { MainPage, GamePage, LandingPage } from \"ui/pages\";\nimport { AuthProtector } from \"ui/components\";\n\nexport const AppRoutes: RouteProps[] = [\n  {\n    path: \"/\",\n    element: React.createElement(LandingPage),\n  },\n  {\n    path: \"/game\",\n    element: React.createElement(AuthProtector, {\n      children: React.createElement(GamePage),\n    }),\n  },\n  {\n    path: \"/main\",\n    element: React.createElement(AuthProtector, {\n      children: React.createElement(MainPage),\n    }),\n  },\n];\n","import { createGlobalStyle } from \"styled-components\";\nimport { Route, Routes } from \"react-router-dom\";\n\nimport RootStore, { RootStoreContext } from \"store\";\n\nimport { AppRoutes } from \"./routes\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', monospace;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst rootStore = new RootStore();\n\nexport default () => {\n  return (\n    <>\n      <GlobalStyle />\n      <RootStoreContext.Provider value={rootStore}>\n        <Routes>\n          {AppRoutes.map((routeProps, i) => (\n            <Route key={i} {...routeProps} />\n          ))}\n        </Routes>\n      </RootStoreContext.Provider>\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./ui\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}