{"version":3,"sources":["game/dice.ts","game/index.ts","utils/types.ts","store/gameStore.ts","utils/api.ts","store/tezosStore.ts","store/index.ts","utils/index.ts","ui/pages/main/styled.ts","ui/pages/main/index.tsx","ui/components/buttons.ts","ui/components/auth/index.tsx","ui/components/game/styled.ts","ui/components/game/index.tsx","ui/pages/game/styled.ts","ui/pages/game/index.tsx","assets/welcome.md","ui/pages/landing/styled.ts","ui/pages/landing/index.tsx","ui/routes/index.ts","ui/index.tsx","reportWebVitals.ts","index.tsx"],"names":["random","Phaser","Math","RandomDataGenerator","Dice","scene","x","y","onClick","sprite","this","physics","add","setInteractive","hitArea","Geom","Rectangle","hitAreaCallback","Contains","useHandCursor","on","alpha","isTinted","clearTint","setTint","n","randomArr","shuffle","push","anims","remove","create","key","frames","generateFrameNumbers","start","end","frameRate","play","FarkleGame","dices","selectedDices","game","toggleDice","index","gameWindowId","Promise","resolve","Game","type","AUTO","parent","width","height","transparent","default","arcade","gravity","preload","load","spritesheet","frameWidth","frameHeight","values","getAt","length","forEach","dice","destroy","diceCount","sys","canvas","i","createDices","bind","Display","Align","In","RightCenter","setFrame","throwDice","GameState","GameStateMap","0","1","2","3","GameStore","getApi","allGames","currentGame","makeAutoObservable","autoBind","a","currentPlayerDices","initGame","map","d","toNumber","gameAddress","api","getGameState","gameState","moveStage","getSelectedDices","throwDices","newGameState","runInAction","diceValues","endMove","loadAllGames","games","state","startNewGame","bet","parseInt","prompt","isNaN","alert","pointsToWin","createNewGame","factoryContractAddress","process","GameApi","tezosToolkit","contract","methodName","params","args","methods","send","fee","operation","confirmation","message","wallet","at","callApiMethod","storageLimit","storage","activeGames","all","address","farkleGameState","gamesWithDetails","orderedGames","sort","b","id","amount","mutez","leaveDiceIndexes","tezosRpcUrl","tezosStore","balance","connected","TempleWallet","isAvailable","connect","name","rpc","toTezos","setProvider","config","confirmationPollingIntervalSecond","pkh","tz","getBalance","Error","gameStore","RootStore","RootStoreContext","createContext","useAppStores","useContext","parseBalance","afterDecimal","tezString","toString","beforeDecimal","slice","repeat","replace","parseFloat","PageContainer","styled","div","ContentContainer","observer","navigate","useNavigate","useEffect","loadGames","joinGameHandler","useCallback","joinGame","createNewGameHandler","variant","size","style","justifyContent","className","fontSize","creator","cursor","BaseButton","Button","AuthProtector","children","location","useLocation","to","from","GameContainer","GameScene","onStart","GameFrame","ResultLine","span","numberToImageMap","4","5","6","pointsMap","useMemo","myPoints","players","value","owner","points","substring","winner","textAlign","currentPlayer","color","inline","p","movePoints","currentPlayerLeavedDices","startGame","disabled","updateCurrentGame","useState","markdown","setMarkdown","fetch","welcomeFileUrl","then","res","text","connectHandler","pathname","options","overrides","table","props","borderCollapse","th","border","td","AppRoutes","path","element","React","createElement","LandingPage","GamePage","MainPage","GlobalStyle","createGlobalStyle","ms_sans_serif","ms_sans_serif_bold","styleReset","rootStore","theme","original","Provider","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1185d8d.chunk.js","sourcesContent":["import Phaser from \"phaser\";\n\nconst random = new Phaser.Math.RandomDataGenerator();\n\nexport class Dice {\n  sprite: Phaser.Physics.Arcade.Sprite;\n\n  constructor(scene: Phaser.Scene, x: number, y: number, onClick: () => void) {\n    this.sprite = scene.physics.add.sprite(x, y, \"dice\");\n    this.sprite.setInteractive({\n      hitArea: new Phaser.Geom.Rectangle(0, 0, 96, 96),\n      hitAreaCallback: Phaser.Geom.Rectangle.Contains,\n      useHandCursor: true,\n    });\n\n    this.sprite.on(\"pointerover\", () => {\n      this.sprite.alpha = 0.5;\n    });\n\n    this.sprite.on(\"pointerout\", () => {\n      this.sprite.alpha = 1;\n    });\n\n    this.sprite.on(\"pointerdown\", () => {\n      onClick();\n      if (this.sprite.isTinted) {\n        this.sprite.clearTint();\n      } else {\n        this.sprite.setTint(0xff0000);\n      }\n    });\n  }\n\n  throwDice(n: number) {\n    const randomArr = random.shuffle([\n      0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4,\n    ]);\n    randomArr.push(n - 1);\n\n    this.sprite.anims.remove(\"roll\");\n    this.sprite.anims.create({\n      key: \"roll\",\n      frames: this.sprite.anims.generateFrameNumbers(\"dice\", {\n        start: 0,\n        end: 5,\n        frames: randomArr,\n      }),\n      frameRate: 15,\n    });\n\n    this.sprite.play(\"roll\");\n  }\n\n  getSprite() {\n    return this.sprite;\n  }\n}\n","import Phaser from \"phaser\";\nimport { Dice } from \"./dice\";\n\nconst onScenePreload = (scene: Phaser.Scene) => {\n  scene.load.spritesheet(\"dice\", \"./images/dice2.png\", {\n    frameWidth: 96,\n    frameHeight: 96,\n  });\n};\n\nconst createDices = (\n  scene: Phaser.Scene,\n  diceCount: number,\n  onClick: (index: number) => void\n) => {\n  const { width, height } = scene.sys.canvas;\n  const dices = [];\n  for (let i = 0; i < diceCount; i++) {\n    if (i === 0) {\n      dices.push(\n        new Dice(scene, width / 2 - (diceCount * 50 - 50), height / 2, () =>\n          onClick(0)\n        )\n      );\n    } else {\n      dices.push(new Dice(scene, 0, 0, () => onClick(i)));\n    }\n  }\n  return dices;\n};\n\nexport class FarkleGame {\n  private dices: Dice[] = [];\n  private selectedDices: { [key: number]: boolean } = {};\n  private game!: Phaser.Game;\n\n  private toggleDice = (index: number) => {\n    if (this.selectedDices[index]) {\n      this.selectedDices[index] = false;\n    } else {\n      this.selectedDices[index] = true;\n    }\n  };\n\n  start(gameWindowId: string) {\n    return new Promise<void>((resolve) => {\n      this.game = new Phaser.Game({\n        type: Phaser.AUTO,\n        parent: gameWindowId,\n        width: \"100\",\n        height: \"100\",\n        transparent: true,\n        physics: {\n          default: \"arcade\",\n          arcade: {\n            gravity: { y: 0 },\n          },\n        },\n        scene: {\n          preload: function () {\n            onScenePreload(this);\n          },\n          create: function () {\n            resolve();\n          },\n        },\n      });\n    });\n  }\n\n  initGame(values: number[]) {\n    this.selectedDices = {};\n    const scene = this.game.scene.getAt(0);\n    if (scene != null) {\n      if (this.dices.length > 0) {\n        this.dices.forEach((dice) => dice.sprite.destroy());\n        this.dices = [];\n      }\n      const dices = createDices(\n        scene,\n        values.length,\n        this.toggleDice.bind(this)\n      );\n      dices.forEach((dice, i) => {\n        this.dices.push(dice);\n        if (i !== 0) {\n          Phaser.Display.Align.In.RightCenter(\n            dice.sprite,\n            dices[i - 1].sprite,\n            100\n          );\n        }\n        dice.sprite.setFrame(values[i] === 0 ? 0 : values[i] - 1);\n      });\n    }\n  }\n\n  throwDices(values: number[]) {\n    this.dices.forEach((dice, i) => dice.throwDice(values[i]));\n  }\n\n  getSelectedDices() {\n    const selectedDices: number[] = [];\n    for (const index in this.selectedDices) {\n      if (this.selectedDices[index]) {\n        selectedDices.push(+index);\n      }\n    }\n    return selectedDices;\n  }\n}\n","import { MichelsonMap } from \"@taquito/taquito\";\nimport { BigNumber } from \"bignumber.js\";\n\nexport interface FarkleGameState {\n  id: BigNumber;\n  address: string;\n  creator: string;\n  state: BigNumber;\n  seed: BigNumber;\n  currentPlayer: string;\n  moveStage: BigNumber;\n  movePoints: BigNumber;\n  winner: string;\n  currentPlayerDices: BigNumber[];\n  currentPlayerLeavedDices: BigNumber[];\n  bet: BigNumber;\n  players: MichelsonMap<string, BigNumber>;\n  pointsToWin: BigNumber;\n}\n\nexport interface FarkleGameFactoryState {\n  activeGames: string[];\n  inactiveGames: string[];\n}\n\nexport const GameState = {\n  Created: 0,\n  PlayerJoined: 1,\n  Started: 2,\n  Finished: 3,\n};\n\nexport const GameStateMap: { [key: number]: string } = {\n  0: \"Created\",\n  1: \"PlayerJoined\",\n  2: \"Started\",\n  3: \"Finished\",\n};\n\nexport const TezToMutezMultiplier = 1000000;\n","import { makeAutoObservable, runInAction } from \"mobx\";\n\nimport { FarkleGame } from \"game\";\nimport { GameApi } from \"utils/api\";\nimport { FarkleGameState, GameState } from \"utils/types\";\n\ntype GetApiFn = () => GameApi;\nexport class GameStore {\n  game: FarkleGame = new FarkleGame();\n  allGames: FarkleGameState[] = [];\n  currentGame: FarkleGameState | null = null;\n\n  constructor(private getApi: GetApiFn) {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  async startGame(gameWindowId: string) {\n    await this.game.start(gameWindowId);\n    if (\n      this.currentGame != null &&\n      this.currentGame.currentPlayerDices.length > 0\n    ) {\n      this.game.initGame(\n        this.currentGame.currentPlayerDices.map((d) => d.toNumber())\n      );\n    } else {\n      this.game.initGame([1, 2, 3, 4, 5, 6]);\n    }\n  }\n\n  async throwDices(gameAddress: string) {\n    const api = this.getApi();\n    const gameState = await api.getGameState(gameAddress);\n    const selectedDices: number[] = [];\n    if (gameState.moveStage.toNumber() > 0) {\n      selectedDices.push(...this.game.getSelectedDices());\n    }\n    const newGameState = await api.throwDices(gameAddress, selectedDices);\n    runInAction(() => {\n      const diceValues = newGameState.currentPlayerDices.map((d) =>\n        d.toNumber()\n      );\n      this.game.initGame(diceValues);\n      this.game.throwDices(diceValues);\n      this.currentGame = newGameState;\n    });\n  }\n\n  async endMove(gameAddress: string) {\n    const gameState = await this.getApi()?.endMove(gameAddress);\n    runInAction(() => {\n      this.currentGame = gameState;\n    });\n  }\n\n  async loadGames() {\n    const games = await this.getApi()?.loadAllGames();\n    runInAction(() => {\n      if (games != null) {\n        this.allGames = games;\n      }\n    });\n  }\n\n  async joinGame(gameAddress: string) {\n    const api = this.getApi();\n    const gameState = await api.getGameState(gameAddress);\n    if (gameState.state.toNumber() >= GameState.Started) {\n      runInAction(() => {\n        this.currentGame = gameState;\n      });\n      return;\n    }\n    const newGameState = await api.startNewGame(\n      gameAddress,\n      gameState.bet.toNumber()\n    );\n    runInAction(() => {\n      this.currentGame = newGameState;\n    });\n  }\n\n  async createNewGame() {\n    const bet = parseInt(prompt(\"Enter bet in TEZ\", \"10\") || \"10\");\n    if (isNaN(bet) || bet <= 0) {\n      alert(\"Please enter right value\");\n      return;\n    }\n    const pointsToWin = parseInt(\n      prompt(\"Enter max points to win the game\", \"2000\") || \"2000\"\n    );\n    if (isNaN(pointsToWin) || pointsToWin <= 0) {\n      alert(\"Please enter right value\");\n      return;\n    }\n    await this.getApi()?.createNewGame(bet, pointsToWin);\n  }\n\n  async updateCurrentGame(gameAddress: string) {\n    const gameState = await this.getApi()?.getGameState(gameAddress);\n    runInAction(() => {\n      this.currentGame = gameState;\n    });\n  }\n}\n","import {\n  ContractAbstraction,\n  SendParams,\n  TezosToolkit,\n  Wallet,\n} from \"@taquito/taquito\";\n\nimport {\n  FarkleGameFactoryState,\n  FarkleGameState,\n  TezToMutezMultiplier,\n} from \"./types\";\n\nconst factoryContractAddress = process.env.REACT_APP_FACTORY_CONTRACT_ADDRESS;\nexport class GameApi {\n  constructor(private tezosToolkit: TezosToolkit) {}\n\n  private async callApiMethod(\n    contract: ContractAbstraction<Wallet>,\n    methodName: string,\n    params: Partial<SendParams> | undefined,\n    ...args: any[]\n  ) {\n    try {\n      const operation = await contract.methods[methodName](...args).send({\n        fee: 1000000,\n        ...params,\n      });\n      await operation.confirmation(1);\n      return operation;\n    } catch (err: any) {\n      alert(err.message);\n      throw err;\n    }\n  }\n\n  async createNewGame(bet: number, pointsToWin: number) {\n    if (bet <= 0) {\n      return [];\n    }\n    if (pointsToWin <= 0) {\n      return [];\n    }\n\n    if (factoryContractAddress != null && factoryContractAddress !== \"\") {\n      const contract = await this.tezosToolkit.wallet.at(\n        factoryContractAddress\n      );\n      await this.callApiMethod(\n        contract,\n        \"createNewGame\",\n        {\n          fee: 10000000,\n          storageLimit: 100000,\n        },\n        bet,\n        pointsToWin\n      );\n      const storage: FarkleGameFactoryState = await contract.storage();\n      return storage.activeGames;\n    }\n  }\n\n  async loadAllGames() {\n    if (factoryContractAddress != null && factoryContractAddress !== \"\") {\n      const contract = await this.tezosToolkit.wallet.at(\n        factoryContractAddress\n      );\n      const storage: FarkleGameFactoryState = await contract.storage();\n      const gamesWithDetails = await Promise.all(\n        (storage.activeGames as string[]).map(async (address) => {\n          const contract = await this.tezosToolkit.wallet.at(address);\n          const farkleGameState: FarkleGameState = await contract.storage();\n          return {\n            ...farkleGameState,\n            address: address,\n          };\n        })\n      );\n      const orderedGames = gamesWithDetails.sort(\n        (a, b) => a.id.toNumber() - b.id.toNumber()\n      );\n      return orderedGames;\n    }\n  }\n\n  async startNewGame(gameAddress: string, bet: number) {\n    if (bet <= 0) {\n      return null;\n    }\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    await this.callApiMethod(contract, \"startGame\", {\n      amount: bet * TezToMutezMultiplier,\n      mutez: true,\n    });\n\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n\n  async throwDices(gameAddress: string, leaveDiceIndexes: number[] = []) {\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    await this.callApiMethod(contract, \"throwDices\", {}, leaveDiceIndexes);\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n\n  async endMove(gameAddress: string) {\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    await this.callApiMethod(contract, \"endMove\", {});\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n\n  async getGameState(gameAddress: string) {\n    const contract = await this.tezosToolkit.wallet.at(gameAddress);\n    const farkleGameState: FarkleGameState = await contract.storage();\n    return farkleGameState;\n  }\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { TempleWallet } from \"@temple-wallet/dapp\";\nimport { GameApi } from \"utils/api\";\n\nconst tezosRpcName = process.env.REACT_APP_TEZOS_RPC_NAME;\nconst tezosRpcUrl = process.env.REACT_APP_TEZOS_RPC_URL;\n\nexport class TezosStore {\n  address = \"\";\n  balance = 0;\n  connected = false;\n  api!: GameApi;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  async connect() {\n    if (this.connected) {\n      return;\n    }\n    const available = await TempleWallet.isAvailable();\n    if (!available) {\n      alert(\"Temple Wallet not installed\");\n    }\n    const wallet = new TempleWallet(\"Farkle\");\n\n    if (tezosRpcUrl != null && tezosRpcUrl !== \"\") {\n      await wallet.connect({\n        name: tezosRpcName || \"not_set\",\n        rpc: tezosRpcUrl,\n      });\n\n      const tezosToolkit = wallet.toTezos();\n      tezosToolkit.setProvider({\n        config: {\n          confirmationPollingIntervalSecond: 1,\n        },\n      });\n      const address = await tezosToolkit.wallet.pkh();\n      const balance = await tezosToolkit.tz.getBalance(address);\n\n      runInAction(() => {\n        this.address = address;\n        this.balance = balance.toNumber();\n        this.connected = wallet.connected;\n        this.api = new GameApi(tezosToolkit);\n      });\n    } else {\n      throw new Error(\"RPC is not set!\");\n    }\n  }\n\n  getApi = () => this.api;\n}\n","import { useContext, createContext } from \"react\";\n\nimport { GameStore } from \"./gameStore\";\nimport { TezosStore } from \"./tezosStore\";\n\nconst tezosStore: TezosStore = new TezosStore();\nconst gameStore: GameStore = new GameStore(tezosStore.getApi);\n\nclass RootStore {\n  tezosStore = tezosStore;\n  gameStore = gameStore;\n}\n\nexport const RootStoreContext = createContext<RootStore>(new RootStore());\nexport const useAppStores = () => useContext(RootStoreContext);\nexport default RootStore;\n","export function parseBalance(balance: number) {\n  if (!balance) {\n    return 0;\n  }\n  const decimals = 6;\n  let afterDecimal;\n  const tezString = balance.toString();\n  const trailingZeros = /0+$/u;\n\n  const beforeDecimal =\n    tezString.length > decimals\n      ? tezString.slice(0, tezString.length - decimals)\n      : \"0\";\n  afterDecimal = (\"0\".repeat(decimals) + balance)\n    .slice(-decimals)\n    .replace(trailingZeros, \"\");\n  if (afterDecimal === \"\") {\n    afterDecimal = \"0\";\n  } else if (afterDecimal.length > 3) {\n    afterDecimal = afterDecimal.slice(0, 3);\n  }\n  return parseFloat(`${beforeDecimal}.${afterDecimal}`);\n}\n","import styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  width: 100vw;\n  height: 88vh;\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { useCallback, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableHeadCell,\n  TableDataCell,\n  Window,\n  WindowContent,\n  WindowHeader,\n  AppBar,\n  Toolbar,\n  Button,\n  Bar,\n} from \"react95\";\n\nimport { useAppStores } from \"store\";\nimport { parseBalance } from \"utils\";\nimport { GameStateMap } from \"utils/types\";\n\nimport { PageContainer, ContentContainer } from \"./styled\";\n\nexport default observer(() => {\n  const { tezosStore, gameStore } = useAppStores();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    gameStore.loadGames();\n  }, [gameStore]);\n\n  const joinGameHandler = useCallback(\n    async (gameAddress: string) => {\n      await gameStore.joinGame(gameAddress);\n      navigate(\"/game\", {\n        state: {\n          gameAddress: gameAddress,\n        },\n      });\n    },\n    [gameStore, navigate]\n  );\n\n  const createNewGameHandler = useCallback(async () => {\n    await gameStore.createNewGame();\n    await gameStore.loadGames();\n  }, [gameStore]);\n\n  return (\n    <PageContainer>\n      <AppBar>\n        <Toolbar>\n          <Button variant=\"menu\">Address: {tezosStore.address}</Button>\n          <Bar size={35} />\n          <Button variant=\"menu\">\n            Balance: {parseBalance(tezosStore.balance)} TEZ\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <ContentContainer>\n        <Window>\n          <WindowHeader>All games</WindowHeader>\n          <Toolbar style={{ justifyContent: \"flex-end\" }}>\n            <Button onClick={createNewGameHandler}>Create new</Button>\n            <Button onClick={gameStore.loadGames}>\n              <i className=\"las la-redo-alt\" style={{ fontSize: \"25px\" }}></i>\n            </Button>\n          </Toolbar>\n          <WindowContent>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeadCell>ID</TableHeadCell>\n                  <TableHeadCell>Contract address</TableHeadCell>\n                  <TableHeadCell>Creator address</TableHeadCell>\n                  <TableHeadCell>Bet</TableHeadCell>\n                  <TableHeadCell>Points to win</TableHeadCell>\n                  <TableHeadCell>Status</TableHeadCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {gameStore.allGames.map((game, i) => (\n                  <TableRow key={i}>\n                    <TableDataCell>{game.id.toNumber()}</TableDataCell>\n                    <TableDataCell>{game.address}</TableDataCell>\n                    <TableDataCell>{game.creator}</TableDataCell>\n                    <TableDataCell>{game.bet.toNumber()} TEZ</TableDataCell>\n                    <TableDataCell>{game.pointsToWin.toNumber()}</TableDataCell>\n                    <TableDataCell>\n                      {GameStateMap[game.state.toNumber()]}\n                    </TableDataCell>\n                    <TableHeadCell\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => joinGameHandler(game.address)}\n                    >\n                      Join game\n                    </TableHeadCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </WindowContent>\n        </Window>\n      </ContentContainer>\n    </PageContainer>\n  );\n});\n","import styled from \"styled-components\";\n//@ts-ignore\nimport { Button } from \"react95\";\n\nexport const BaseButton = styled(Button)``;\n","import { observer } from \"mobx-react-lite\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nimport { useAppStores } from \"store\";\n\nexport const AuthProtector: React.FC<{\n  children: JSX.Element;\n}> = observer(({ children }) => {\n  const { tezosStore } = useAppStores();\n  const location = useLocation();\n\n  if (!tezosStore.connected) {\n    return <Navigate to=\"/\" state={{ from: location }} />;\n  }\n\n  return children;\n});\n","import styled from \"styled-components\";\n\nexport const GameContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n","import React, { useEffect } from \"react\";\nimport { GameContainer } from \"./styled\";\n\nconst gameWindowId = \"gameWindow\";\n\nexport const GameScene: React.FC<{\n  onStart(gameWindowId: string): void;\n}> = ({ onStart }) => {\n  useEffect(() => {\n    onStart(gameWindowId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return <GameContainer id={gameWindowId} />;\n};\n","import styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  position: relative;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: #cdcdcd;\n`;\n\nexport const GameFrame = styled.div`\n  position: relative;\n  width: 80vw;\n  height: 60vh;\n  border: 5px solid #cdcdcd;\n  background-color: grey;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ResultLine = styled.span`\n  color: black;\n  font-size: 40px;\n  font-family: monospace;\n`;\n\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useMemo } from \"react\";\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  Window,\n  WindowContent,\n  WindowHeader,\n  List,\n  ListItem,\n  Button,\n  Toolbar,\n  Bar,\n} from \"react95\";\n\nimport { useAppStores } from \"store\";\nimport { GameScene } from \"ui/components\";\nimport { GameState } from \"utils/types\";\n\nimport { PageContainer, GameFrame, ResultLine } from \"./styled\";\n\nconst numberToImageMap: { [key: number]: string } = {\n  1: \"la-dice-one\",\n  2: \"la-dice-two\",\n  3: \"la-dice-three\",\n  4: \"la-dice-four\",\n  5: \"la-dice-five\",\n  6: \"la-dice-six\",\n};\n\nexport default observer(() => {\n  const { gameStore, tezosStore } = useAppStores();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { gameAddress } = location.state || {};\n  const pointsMap = useMemo(() => {\n    let map: { owner: string; points: number }[] = [];\n    let myPoints: { owner: string; points: number } | null = null;\n    gameStore.currentGame?.players.forEach((value, key) => {\n      if (key === tezosStore.address) {\n        myPoints = {\n          owner: \"Your\",\n          points: value.toNumber(),\n        };\n      } else {\n        map.push({\n          owner: `Player (${key.substring(key.length - 4, key.length)})`,\n          points: value.toNumber(),\n        });\n      }\n    });\n    if (myPoints != null) {\n      map = [myPoints, ...map];\n    }\n    return map;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tezosStore, gameStore, gameStore.currentGame]);\n\n  useEffect(() => {\n    if (gameStore.currentGame?.state.toNumber() === GameState.Finished) {\n      if (gameStore.currentGame?.winner === tezosStore.address) {\n        alert(\"You won this game! Congratulations!\");\n      } else {\n        alert(\"Sorry but you lost at this game :(. Try to win next time!\");\n      }\n      navigate(\"/main\", { replace: true });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gameStore.currentGame, tezosStore.address, navigate]);\n\n  if (gameAddress == null) {\n    return <Navigate to={\"/main\"} replace={true} />;\n  }\n\n  return (\n    <PageContainer>\n      <Window>\n        <WindowHeader style={{ textAlign: \"center\" }}>\n          {gameStore.currentGame?.currentPlayer === tezosStore.address ? (\n            <span style={{ color: \"GreenYellow\" }}>Your turn!</span>\n          ) : (\n            <span style={{ color: \"red\" }}>Wait for other player's moves!</span>\n          )}\n        </WindowHeader>\n        <Toolbar style={{ justifyContent: \"center\" }}>\n          <List inline>\n            {pointsMap.map((p, i) => (\n              <ListItem key={i}>\n                {p.owner} points: {p.points}\n              </ListItem>\n            ))}\n\n            <ListItem>\n              Move points: {gameStore.currentGame?.movePoints.toNumber()}\n            </ListItem>\n            {(gameStore.currentGame?.currentPlayerLeavedDices?.length || 0) >\n              0 && (\n              <ListItem>\n                <ResultLine>\n                  {gameStore.currentGame?.currentPlayerLeavedDices.map(\n                    (dice, i) => (\n                      <i\n                        key={i}\n                        className={\"las \" + numberToImageMap[dice.toNumber()]}\n                      ></i>\n                    )\n                  )}\n                </ResultLine>\n              </ListItem>\n            )}\n          </List>\n        </Toolbar>\n        <WindowContent>\n          <GameFrame>\n            <GameScene onStart={gameStore.startGame.bind(gameStore)} />\n          </GameFrame>\n        </WindowContent>\n        <Toolbar style={{ justifyContent: \"center\" }}>\n          <Button\n            onClick={() => gameStore.throwDices(gameAddress)}\n            disabled={\n              gameStore.currentGame?.currentPlayer !== tezosStore.address\n            }\n          >\n            Roll dices\n          </Button>\n          <Bar size={35} />\n          <Button\n            onClick={() => gameStore.endMove(gameAddress)}\n            disabled={gameStore.currentGame?.moveStage.toNumber() === 0}\n          >\n            End move\n          </Button>\n          <Bar size={35} />\n          <Button onClick={() => gameStore.updateCurrentGame(gameAddress)}>\n            <i className=\"las la-redo-alt\" style={{ fontSize: \"25px\" }}></i>\n          </Button>\n        </Toolbar>\n      </Window>\n    </PageContainer>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/welcome.ec1fc8d0.md\";","import styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  position: relative;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Window, WindowContent, Cutout, Toolbar, WindowHeader } from \"react95\";\nimport Markdown from \"markdown-to-jsx\";\n\nimport { BaseButton } from \"ui/components\";\nimport { useAppStores } from \"store\";\nimport welcomeFileUrl from \"assets/welcome.md\";\n\nimport { PageContainer } from \"./styled\";\n\nexport default observer(() => {\n  const { tezosStore } = useAppStores();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [markdown, setMarkdown] = useState(\"\");\n\n  useEffect(() => {\n    fetch(welcomeFileUrl)\n      .then((res) => res.text())\n      .then(setMarkdown);\n  }, [setMarkdown]);\n\n  const connectHandler = useCallback(async () => {\n    await tezosStore.connect();\n    const from = location.state?.from?.pathname || \"/main\";\n    navigate(from, { replace: true });\n  }, [tezosStore, location, navigate]);\n\n  return (\n    <PageContainer>\n      <Window>\n        <WindowHeader style={{ textAlign: \"center\" }}>Farkle!</WindowHeader>\n        <WindowContent>\n          <Cutout style={{ width: \"70vw\", height: \"70vh\" }}>\n            <Markdown\n              className=\"md\"\n              children={markdown}\n              options={{\n                overrides: {\n                  table: {\n                    props: {\n                      style: {\n                        borderCollapse: \"collapse\",\n                        width: \"100%\",\n                      },\n                    },\n                  },\n                  th: {\n                    props: {\n                      style: {\n                        border: \"1px solid black\",\n                      },\n                    },\n                  },\n                  td: {\n                    props: {\n                      style: {\n                        border: \"1px solid black\",\n                      },\n                    },\n                  },\n                },\n              }}\n            />\n          </Cutout>\n        </WindowContent>\n        <Toolbar style={{ justifyContent: \"center\" }}>\n          <BaseButton onClick={connectHandler}>Start game</BaseButton>\n        </Toolbar>\n      </Window>\n    </PageContainer>\n  );\n});\n","import React from \"react\";\nimport { RouteProps } from \"react-router-dom\";\n\nimport { MainPage, GamePage, LandingPage } from \"ui/pages\";\nimport { AuthProtector } from \"ui/components\";\n\nexport const AppRoutes: RouteProps[] = [\n  {\n    path: \"/\",\n    element: React.createElement(LandingPage),\n  },\n  {\n    path: \"/game\",\n    element: React.createElement(AuthProtector, {\n      children: React.createElement(GamePage),\n    }),\n  },\n  {\n    path: \"/main\",\n    element: React.createElement(AuthProtector, {\n      children: React.createElement(MainPage),\n    }),\n  },\n];\n","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { styleReset } from \"react95\";\nimport original from \"react95/dist/themes/original\";\nimport ms_sans_serif from \"react95/dist/fonts/ms_sans_serif.woff2\";\nimport ms_sans_serif_bold from \"react95/dist/fonts/ms_sans_serif_bold.woff2\";\n\nimport RootStore, { RootStoreContext } from \"store\";\n\nimport { AppRoutes } from \"./routes\";\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'ms_sans_serif';\n    src: url('${ms_sans_serif}') format('woff2');\n    font-weight: 400;\n    font-style: normal\n  }\n  @font-face {\n    font-family: 'ms_sans_serif';\n    src: url('${ms_sans_serif_bold}') format('woff2');\n    font-weight: bold;\n    font-style: normal\n  }\n  body {\n    font-family: 'ms_sans_serif';\n    margin: 0;\n  }\n  ::not(.md) {\n    ${styleReset}\n  }\n`;\n\nconst rootStore = new RootStore();\n\nexport default () => {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={original}>\n        <RootStoreContext.Provider value={rootStore}>\n          <Routes>\n            {AppRoutes.map((routeProps, i) => (\n              <Route key={i} {...routeProps} />\n            ))}\n          </Routes>\n        </RootStoreContext.Provider>\n      </ThemeProvider>\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./ui\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}