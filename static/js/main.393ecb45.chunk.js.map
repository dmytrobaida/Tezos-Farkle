{"version":3,"sources":["game/dice.ts","game/index.ts","store/gameStore.ts","store/tezosStore.ts","store/index.ts","ui/components/buttons.ts","ui/components/game/gameScene.tsx","ui/pages/main/styled.ts","ui/pages/main/index.tsx","ui/index.tsx","reportWebVitals.ts","index.tsx"],"names":["random","Phaser","Math","RandomDataGenerator","Dice","scene","x","y","sprite","this","physics","add","setInteractive","Geom","Rectangle","Contains","on","alpha","n","randomArr","shuffle","push","anims","remove","create","key","frames","generateFrameNumbers","start","end","frameRate","play","FarkleGame","dices","gameWindowId","that","Game","type","AUTO","parent","width","height","default","arcade","gravity","preload","load","spritesheet","frameWidth","frameHeight","values","forEach","dice","i","throwDice","GameStore","game","numbers","Between","throwDices","TezosStore","address","balance","connected","tezosToolkit","makeAutoObservable","autoBind","a","TempleWallet","isAvailable","alert","wallet","connect","toTezos","pkh","tz","getBalance","runInAction","toString","contract","methods","increment","send","operation","confirmation","RootStore","tezosStore","gameStore","RootStoreContext","createContext","useAppStores","useContext","BaseButton","styled","div","GameScene","observer","useEffect","startGame","id","style","PageContainer","InfoLine","ConnectWalletMenuContainer","GameFrame","position","right","onClick","left","callContract","bottom","GlobalStyle","createGlobalStyle","rootStore","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.393ecb45.chunk.js","sourcesContent":["import Phaser from \"phaser\";\n\nconst random = new Phaser.Math.RandomDataGenerator();\n\nexport class Dice {\n    sprite: Phaser.Physics.Arcade.Sprite;\n\n    constructor(scene: Phaser.Scene, x: number, y: number) {\n        this.sprite = scene.physics.add.sprite(x, y, \"dice\");\n        this.sprite.setInteractive(new Phaser.Geom.Rectangle(0, 0, 100, 100), Phaser.Geom.Rectangle.Contains);\n\n        this.sprite.on('pointerover', () => {\n            this.sprite.alpha = 0.5;\n        })\n\n        this.sprite.on('pointerout', () => {\n            this.sprite.alpha = 1;\n        })\n    }\n\n    throwDice(n: number) {\n        const randomArr = random.shuffle([0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4]);\n        randomArr.push(n - 1);\n\n        this.sprite.anims.remove(\"roll\");\n        this.sprite.anims.create({\n            key: \"roll\",\n            frames: this.sprite.anims.generateFrameNumbers(\"dice\", {\n                start: 0,\n                end: 5,\n                frames: randomArr,\n            }),\n            frameRate: 15,\n        });\n\n        this.sprite.play(\"roll\");\n    }\n\n    getSprite() {\n        return this.sprite;\n    }\n}","import Phaser from \"phaser\";\nimport { Dice } from \"./dice\";\n\nconst onScenePreload = (scene: Phaser.Scene) => {\n  scene.load.spritesheet(\"dice\", \"./images/dice.png\", {\n    frameWidth: 100,\n    frameHeight: 100,\n  });\n};\n\nconst onSceneCreate = (scene: Phaser.Scene) => {\n  return [\n    new Dice(scene, 400, 100),\n    new Dice(scene, 500, 100),\n    new Dice(scene, 600, 100),\n    new Dice(scene, 700, 100),\n    new Dice(scene, 800, 100),\n  ];\n};\n\nexport class FarkleGame {\n  dices: Dice[] = [];\n\n  start(gameWindowId: string) {\n    const that = this;\n\n    new Phaser.Game({\n      type: Phaser.AUTO,\n      parent: gameWindowId,\n      width: \"100\",\n      height: \"100\",\n      physics: {\n        default: \"arcade\",\n        arcade: {\n          gravity: { y: 0 },\n        },\n      },\n      scene: {\n        preload: function () {\n          onScenePreload(this);\n        },\n        create: function () {\n          const dices = onSceneCreate(this);\n          that.dices.push(...dices)\n        },\n      },\n    });\n  }\n\n  throwDices(values: number[]) {\n    this.dices.forEach((dice, i) => dice.throwDice(values[i]));\n  }\n}\n","import { FarkleGame } from \"game\";\n\nexport class GameStore {\n    game: FarkleGame = new FarkleGame();\n\n    startGame(gameWindowId: string) {\n        this.game.start(gameWindowId);\n    }\n\n    throwDices() {\n        const numbers = [\n            Phaser.Math.Between(1, 6),\n            Phaser.Math.Between(1, 6),\n            Phaser.Math.Between(1, 6),\n            Phaser.Math.Between(1, 6),\n            Phaser.Math.Between(1, 6),\n        ];\n        this.game.throwDices(numbers);\n    }\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { TempleWallet } from \"@temple-wallet/dapp\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nconst tezosRpcUrl = process.env.REACT_APP_TEZOS_RPC_URL;\nconst contractAddress = process.env.REACT_APP_CONTRACT_ADDRESS;\n\nexport class TezosStore {\n  address = \"\";\n  balance = \"\";\n  connected = false;\n  tezosToolkit!: TezosToolkit;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  async connect() {\n    if (this.connected) {\n      return;\n    }\n    const available = await TempleWallet.isAvailable();\n    if (!available) {\n      alert(\"Temple Wallet not installed\");\n    }\n    const wallet = new TempleWallet(\"Farkle\");\n    if (tezosRpcUrl != null && tezosRpcUrl !== \"\") {\n      await wallet.connect({\n        name: \"Local\",\n        rpc: tezosRpcUrl,\n      });\n    } else {\n      await wallet.connect(\"granadanet\");\n    }\n    this.tezosToolkit = wallet.toTezos();\n\n    const address = await this.tezosToolkit.wallet.pkh();\n    const balance = await this.tezosToolkit.tz.getBalance(address);\n\n    runInAction(() => {\n      this.address = address;\n      this.balance = balance.toString();\n      this.connected = wallet.connected;\n    });\n  }\n\n  async callContract() {\n    if (contractAddress != null && contractAddress !== \"\") {\n      const contract = await this.tezosToolkit.wallet.at(contractAddress);\n      const operation = await contract.methods.increment(5).send();\n      await operation.confirmation();\n    }\n  }\n}\n","import { useContext, createContext } from \"react\";\nimport { GameStore } from \"./gameStore\";\n\nimport { TezosStore } from \"./tezosStore\";\n\nclass RootStore {\n  tezosStore: TezosStore = new TezosStore();\n  gameStore: GameStore = new GameStore();\n}\n\nexport const RootStoreContext = createContext<RootStore>(new RootStore());\nexport const useAppStores = () => useContext(RootStoreContext);\nexport default RootStore;\n","import styled from \"styled-components\";\n\nexport const BaseButton = styled.div`\n  line-height: 50px;\n  padding: 0 15px 0 15px;\n  color: black;\n  border-radius: 5px;\n  border: 1px solid black;\n  width: auto;\n  background-color: red;\n  text-align: center;\n  cursor: pointer;\n\n  :hover {\n    color: white;\n  }\n`;\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useAppStores } from \"store\";\n\nconst gameWindowId = \"gameWindow\";\n\nexport const GameScene = observer(() => {\n  const { gameStore } = useAppStores();\n\n  useEffect(() => {\n    gameStore.startGame(gameWindowId);\n  }, [gameStore]);\n  return (\n    <div\n      id={gameWindowId}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n    />\n  );\n});\n","import styled from \"styled-components\";\n\nexport const PageContainer = styled.div`\n  position: relative;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport const InfoLine = styled.div`\n  cursor: pointer;\n  font-size: 14px;\n  margin-right: 10px;\n\n  :hover {\n    color: red;\n  }\n`;\n\nexport const ConnectWalletMenuContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100vw;\n  height: 12vh;\n`;\n\nexport const GameFrame = styled.div`\n  position: relative;\n  width: 80vw;\n  height: 76vh;\n  border: 5px solid white;\n  background-color: grey;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { observer } from \"mobx-react-lite\";\n\nimport { BaseButton } from \"ui/components\";\nimport { useAppStores } from \"store\";\nimport { GameScene } from \"ui/components/game/gameScene\";\n\nimport {\n  PageContainer,\n  InfoLine,\n  ConnectWalletMenuContainer,\n  GameFrame,\n} from \"./styled\";\n\nexport default observer(() => {\n  const { tezosStore, gameStore } = useAppStores();\n\n  return (\n    <PageContainer>\n      <ConnectWalletMenuContainer>\n        <InfoLine>Address: {tezosStore.address}</InfoLine>\n        <InfoLine>Balance: {tezosStore.balance}</InfoLine>\n        <BaseButton\n          style={{\n            position: \"absolute\",\n            right: \"0\",\n          }}\n          onClick={tezosStore.connect}\n        >\n          {tezosStore.connected ? \"Connected\" : \"Connect\"}\n        </BaseButton>\n        {tezosStore.connected && (\n          <BaseButton\n            style={{\n              position: \"absolute\",\n              left: \"0\",\n            }}\n            onClick={tezosStore.callContract}\n          >\n            Call contract\n          </BaseButton>\n        )}\n      </ConnectWalletMenuContainer>\n      <GameFrame>\n        <GameScene />\n        <BaseButton\n          style={{\n            position: \"absolute\",\n            bottom: \"10px\",\n          }}\n          onClick={() => gameStore.throwDices()}\n        >\n          Roll a dice\n        </BaseButton>\n      </GameFrame>\n    </PageContainer>\n  );\n});\n","import { createGlobalStyle } from \"styled-components\";\n\nimport RootStore, { RootStoreContext } from \"store\";\n\nimport { MainPage } from \"./pages\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Roboto', monospace;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nconst rootStore = new RootStore();\n\nexport default () => {\n  return (\n    <>\n      <GlobalStyle />\n      <RootStoreContext.Provider value={rootStore}>\n        <MainPage />\n      </RootStoreContext.Provider>\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './ui';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}